#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n;
ll d[1001];
int main(void){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n;
    d[1] = 1;
    d[2] = 2;
    for(int i=3; i<=n; i++){
        d[i] = d[i-1] % 10007 + d[i-2] % 10007;
        d[i] %= 10007;
    }
    cout << d[n];
    return 0;
}

/*
강의의 힌트를 받아서 풀음. 복습 필요.
오답 정리
뭐하는 문제인가 해서 풀어보니 피보나치더라
1000번째 피보나치 수를 10007로 나눈 나머지를 구하는 문제였는데
일단 대충 1000번째 피보나치 수는
43466557686937456435688527675040625802564660517371780402481
72908953655541794905189040387984007925516929592259308032263
47752096896232398733224711616429964409065331879382989696499
28516003704476137795166849228875 되시겠다
하찮은 64비트 컴퓨터 따위가 저 큰 변수를 모두 담을 수는 없으니
분배 법칙을 써서 풀어야 했는데
내가 그 분배 법칙을 제대로 활용하지 못했다
a = b + c 일 때 a % d = b % d + c % d 임을 기억하자

+ 부연 설명 : 합동식 문제라고 볼 수도 있겠다
*/
